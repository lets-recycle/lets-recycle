{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/STD/Desktop/lets_recycle/lets_recycle/lets_recycle_app/src/screen/Edit.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-navigation';\nimport Spacer from \"../components/Spacer\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\nvar API = \"https://lets-recycle-67594.firebaseio.com\";\n\nvar EditScreen = function EditScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      update = _useContext.update,\n      state = _useContext.state;\n\n  var _useState = useState(state.user.displayName || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(state.user.phoneNumber || ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMsg = _useState8[0],\n      setErrorMsg = _useState8[1];\n\n  var _useState9 = useState('Waiting..'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      text = _useState10[0],\n      setText = _useState10[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied');\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n              setLocation(location);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    console.log('shof');\n  }, []);\n  useEffect(function () {\n    console.log('shof', errorMsg, location);\n\n    if (errorMsg) {\n      setText(errorMsg);\n    } else if (location) {\n      setText(JSON.stringify(location));\n      console.log(state.user, 'uuuuuuuuuuuuuuuuuuuu');\n\n      (function _callee2() {\n        var res;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(fetch(API + \"/users.json\", {\n                  method: 'POST',\n                  mode: 'cors',\n                  headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                  }),\n                  body: JSON.stringify({\n                    \"name\": name,\n                    \"email\": 'email',\n                    \"paswword\": \"456\",\n                    \"location\": \"amman\",\n                    \"balance\": 500,\n                    \"number\": \"078888\"\n                  })\n                }));\n\n              case 2:\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(results.json());\n\n              case 4:\n                res = _context2.sent;\n                console.log(res, 'rrrrrrrrrrrrrrrrrr');\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    } else {\n      setText('no location');\n      console.log(state.user, 'zzzzzzzzzzzzzzzzz');\n\n      (function _callee3() {\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('tttttttttttttttttttttt');\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n  }, [location, errorMsg]);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always'\n    },\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 48\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"EditScreen\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"name : \", state.user.displayName || ''), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"name\",\n    value: name,\n    onChangeText: setName,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"phoneNumber : \", state.user.phoneNumber || ''), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"phoneNumber\",\n    value: phone,\n    onChangeText: setPhone,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.paragraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, text), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Save and Back\",\n    onPress: function onPress() {\n      return update({\n        displayName: name,\n        phoneNumber: phone,\n        location: text\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Cancel\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEditScreen.navigationOptions = {\n  title: 'Edit',\n  tabBarIcon: React.createElement(MaterialCommunityIcons, {\n    name: \"account-edit\",\n    size: 24,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })\n};\nvar styles = StyleSheet.create({\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default EditScreen;","map":{"version":3,"sources":["/mnt/c/Users/STD/Desktop/lets_recycle/lets_recycle/lets_recycle_app/src/screen/Edit.js"],"names":["React","useState","useContext","useEffect","Input","Button","SafeAreaView","Spacer","Context","AuthContext","MaterialCommunityIcons","Constants","Location","API","EditScreen","navigation","update","state","user","displayName","name","setName","phoneNumber","phone","setPhone","location","setLocation","errorMsg","setErrorMsg","text","setText","requestPermissionsAsync","status","getCurrentPositionAsync","console","log","JSON","stringify","fetch","method","mode","headers","Headers","body","results","json","res","top","flex","fontSize","styles","paragraph","navigate","navigationOptions","title","tabBarIcon","StyleSheet","create","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { View, StyleSheet, Text, ScrollView } from 'react-native';\nimport { Input } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-navigation';\nimport Spacer from '../components/Spacer';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\n\nconst API = \"https://lets-recycle-67594.firebaseio.com\"\n\nconst EditScreen = ({ navigation }) => {\n  const { update, state } = useContext(AuthContext);\n  const [name, setName] = useState(state.user.displayName || '');\n  const [phone, setPhone] = useState(state.user.phoneNumber || '');\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [text, setText] = useState('Waiting..');\n\n  useEffect(() => {\n    // if (Platform.OS === 'android' && !Constants.isDevice) {\n    //   setErrorMsg(\n    //     'Oops, this will not work on Sketch in an Android emulator. Try it on your device!'\n    //   );\n    // } else {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n\n    // }\n    console.log('shof')\n  }, []);\n  useEffect(() => {\n    console.log('shof', errorMsg, location)\n    if (errorMsg) {\n      setText(errorMsg);\n    } else if (location) {\n      setText(JSON.stringify(location));\n      console.log(state.user, 'uuuuuuuuuuuuuuuuuuuu');\n      (async () => {\n        await fetch(`${API}/users.json`, {\n          method: 'POST',\n          mode: 'cors',\n          // cache: 'no-cache',\n          headers: new Headers({\n            //  'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }),\n          body: JSON.stringify({\n            \"name\": name,\n            \"email\": 'email',\n            \"paswword\": \"456\",\n            \"location\": \"amman\",\n            \"balance\": 500,\n            \"number\": \"078888\"\n          })\n        });\n        let res = await results.json();\n        console.log(res, 'rrrrrrrrrrrrrrrrrr');\n      })();\n    }else {\n      setText('no location');\n      console.log(state.user, 'zzzzzzzzzzzzzzzzz');\n      (async () => {\n        console.log('tttttttttttttttttttttt');\n        // await fetch(`${API}/users.json`, {\n        //   method: 'POST',\n        //   mode: 'cors',\n        //   // cache: 'no-cache',\n        //   headers: new Headers({\n        //     //  'Authorization': `Bearer ${token}`,\n        //     'Content-Type': 'application/json',\n        //     'Accept': 'application/json'\n        //   }),\n        //   body: JSON.stringify({\n        //     \"name\": name,\n        //     \"email\": state.user.email,\n        //     \"paswword\": \"456\",\n        //     \"location\": location,\n        //     \"balance\": 500,\n        //     \"number\": \"078888\"\n        //   })\n        // });\n        // let res = await results.json();\n        // console.log(res, 'rrrrrrrrrrrrrrrrrr');\n      })();\n    }\n  }, [location, errorMsg])\n\n\n  return (\n    <ScrollView>\n      <SafeAreaView forceInset={{ top: 'always' }} style={{ flex: 1 }}>\n        <Text style={{ fontSize: 48 }}>EditScreen</Text>\n        <Text >name : {state.user.displayName || ''}</Text>\n        <Spacer />\n        <Input\n          label=\"name\"\n          value={name}\n          onChangeText={setName}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        <Spacer />\n        <Text >phoneNumber : {state.user.phoneNumber || ''}</Text>\n        <Spacer />\n        <Input\n          label=\"phoneNumber\"\n          value={phone}\n          onChangeText={setPhone}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n        <Spacer />\n        <Text style={styles.paragraph}>{text}</Text>\n        <Spacer>\n          <Button title=\"Save and Back\" onPress={() => update({ displayName: name, phoneNumber: phone, location: text })} />\n          <Button title=\"Cancel\" onPress={() =>\n            navigation.navigate('Profile')} />\n        </Spacer>\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nEditScreen.navigationOptions = {\n  title: 'Edit',\n  tabBarIcon: <MaterialCommunityIcons name=\"account-edit\" size={24} color=\"black\" />\n};\n\nconst styles = StyleSheet.create({\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n\nexport default EditScreen;\n"]},"metadata":{},"sourceType":"module"}