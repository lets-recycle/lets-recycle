{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/STD/Desktop/lets_recycle/lets_recycle/lets_recycle_app/src/screen/Edit.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-navigation';\nimport Spacer from \"../components/Spacer\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\n\nvar EditScreen = function EditScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      update = _useContext.update,\n      state = _useContext.state;\n\n  var _useState = useState(state.user.displayName || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(state.user.phoneNumber || ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMsg = _useState8[0],\n      setErrorMsg = _useState8[1];\n\n  var _useState9 = useState('Waiting..'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      text = _useState10[0],\n      setText = _useState10[1];\n\n  useEffect(function () {\n    if (Platform.OS === 'android' && !Constants.isDevice) {\n      setErrorMsg('Oops, this will not work on Sketch in an Android emulator. Try it on your device!');\n    } else {\n      (function _callee() {\n        var _await$Location$reque, status, location;\n\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n              case 2:\n                _await$Location$reque = _context.sent;\n                status = _await$Location$reque.status;\n\n                if (status !== 'granted') {\n                  setErrorMsg('Permission to access location was denied');\n                }\n\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n              case 7:\n                location = _context.sent;\n                setLocation(location);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n\n    console.log('shof');\n  }, []);\n  useEffect(function () {\n    console.log('shof', errorMsg, location);\n\n    if (errorMsg) {\n      setText(errorMsg);\n    } else if (location) {\n      setText(JSON.stringify(location));\n    }\n  }, [location, errorMsg]);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always'\n    },\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 48\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"EditScreen\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"name : \", state.user.displayName || ''), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    label: \"name\",\n    value: name,\n    onChangeText: setName,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"phoneNumber : \", state.user.phoneNumber || ''), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    label: \"phoneNumber\",\n    value: phone,\n    onChangeText: setPhone,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.paragraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, text), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Save and Back\",\n    onPress: function onPress() {\n      return update({\n        displayName: name,\n        phoneNumber: phone,\n        location: text\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Cancel\",\n    onPress: function onPress() {\n      return navigation.navigate('Profile');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }))));\n};\n\nEditScreen.navigationOptions = {\n  title: 'Edit',\n  tabBarIcon: React.createElement(MaterialCommunityIcons, {\n    name: \"account-edit\",\n    size: 24,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })\n};\nvar styles = StyleSheet.create({\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default EditScreen;","map":{"version":3,"sources":["/mnt/c/Users/STD/Desktop/lets_recycle/lets_recycle/lets_recycle_app/src/screen/Edit.js"],"names":["React","useState","useContext","useEffect","Input","Button","SafeAreaView","Spacer","Context","AuthContext","MaterialCommunityIcons","Constants","Location","EditScreen","navigation","update","state","user","displayName","name","setName","phoneNumber","phone","setPhone","location","setLocation","errorMsg","setErrorMsg","text","setText","Platform","OS","isDevice","requestPermissionsAsync","status","getCurrentPositionAsync","console","log","JSON","stringify","top","flex","fontSize","styles","paragraph","navigate","navigationOptions","title","tabBarIcon","StyleSheet","create","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext ,useEffect} from 'react';\nimport { View, StyleSheet, Text,ScrollView } from 'react-native';\nimport { Input } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport { SafeAreaView } from 'react-navigation';\nimport Spacer from '../components/Spacer';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\n\nconst EditScreen = ({ navigation }) => {\n  const { update, state } = useContext(AuthContext);\n  const [name, setName] = useState(state.user.displayName || '');\n  const [phone, setPhone] = useState(state.user.phoneNumber || '');\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [text,setText] = useState('Waiting..');\n  \nuseEffect(() => {\n    if (Platform.OS === 'android' && !Constants.isDevice) {\n      setErrorMsg(\n        'Oops, this will not work on Sketch in an Android emulator. Try it on your device!'\n      );\n    } else {\n      (async () => {\n        let { status } = await Location.requestPermissionsAsync();\n        if (status !== 'granted') {\n          setErrorMsg('Permission to access location was denied');\n        }\n\n        let location = await Location.getCurrentPositionAsync({});\n        setLocation(location);\n      })();\n      \n    }\n    console.log('shof')\n  },[]);\n  useEffect(()=>{\n    console.log('shof',errorMsg,location)\n    if (errorMsg) {\n      setText(errorMsg);\n    } else if (location) {\n      setText(JSON.stringify(location));\n    }\n  },[location,errorMsg])\n  \n  \n  return (\n    <ScrollView>\n    <SafeAreaView forceInset={{ top: 'always' } } style={{flex:1}}>\n      <Text style={{ fontSize: 48 }}>EditScreen</Text>\n      <Text >name : {state.user.displayName || ''}</Text>\n      <Spacer />\n      <Input\n        label=\"name\"\n        value={name}\n        onChangeText={setName}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      <Spacer />\n      <Text >phoneNumber : {state.user.phoneNumber || ''}</Text>\n      <Spacer />\n      <Input\n        label=\"phoneNumber\"\n        value={phone}\n        onChangeText={setPhone}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      <Spacer />\n      <Text style={styles.paragraph}>{text}</Text>\n      <Spacer>\n        <Button title=\"Save and Back\" onPress={() => update({ displayName: name, phoneNumber: phone,location:text })} />\n        <Button title=\"Cancel\" onPress={() =>\n          navigation.navigate('Profile')} />\n      </Spacer>\n    </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nEditScreen.navigationOptions = {\n  title: 'Edit',\n  tabBarIcon: <MaterialCommunityIcons name=\"account-edit\" size={24} color=\"black\" />\n};\n\nconst styles = StyleSheet.create({\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n\nexport default EditScreen;\n"]},"metadata":{},"sourceType":"module"}